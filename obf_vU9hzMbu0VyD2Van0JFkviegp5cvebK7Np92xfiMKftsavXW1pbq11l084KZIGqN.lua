--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v69=0;local v70;while true do if (v69==0) then v70=v2(v0(v20,16));if v19 then local v85=v5(v70,v19);v19=nil;return v85;else return v70;end break;end end end end);local function v21(v22,v23,v24)if v24 then local v71=(v22/(2^(v23-(1988 -(140 + 1847)))))%((1 + 1)^(((v24-(1 + 0)) -(v23-(2 -1))) + 1 + 0)) ;return v71-(v71%1) ;else local v72=(9 -(1594 -(6 + 1581)))^(v23-(1 + 0)) ;return (((v22%(v72 + v72))>=v72) and (1709 -(1055 + 653))) or (0 -0) ;end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1 ;return v38;end local function v26()local v39,v40=v1(v16,v18,v18 + (968 -(7 + 959)) );v18=v18 + (7 -5) ;return (v40 * (994 -(514 + 224))) + v39 ;end local function v27()local v41=0 -0 ;local v42;local v43;local v44;local v45;while true do if (v41==(1 -(0 + 0))) then return (v45 * (35470643 -18693427)) + (v44 * (162569 -97033)) + (v43 * (1016 -760)) + v42 ;end if (v41==(0 -(579 -(382 + 197)))) then v42,v43,v44,v45=v1(v16,v18,v18 + (1541 -((1881 -(765 + 849)) + 1271)) );v18=v18 + 1 + 3 ;v41=1;end end end local function v28()local v46=v27();local v47=v27();local v48=(2 -1) -0 ;local v49=(v21(v47,1 + 0 ,40 -20 ) * ((2 + 0)^32)) + v46 ;local v50=v21(v47,71 -50 ,31);local v51=((v21(v47,1 + 31 )==(1 + 0)) and  -(1019 -(62 + 956))) or (3 -2) ;if (v50==(0 -0)) then if (v49==0) then return v51 * 0 ;else local v77=0 + 0 ;while true do if (v77==(0 -(743 -(310 + 433)))) then v50=1;v48=0 + (1913 -(1436 + 477)) ;break;end end end elseif (v50==(1506 + 541)) then return ((v49==(441 -(28 + 413))) and (v51 * (1/0))) or (v51 * NaN) ;end return v8(v51,v50-((1941 -1144) + 226) ) * (v48 + (v49/((5 -(11 -8))^(47 + 4 + 1)))) ;end local function v29(v30)local v52;if  not v30 then local v73=0 -0 ;while true do if (((558 -(507 + 51)) -0)==v73) then v30=v27();if (v30==(0 + (0 -0))) then return "";end break;end end end v52=v3(v16,v18,(v18 + v30) -1 );v18=v18 + v30 ;local v53={};for v67=4 -3 , #v52 do v53[v67]=v2(v1(v3(v52,v67,v67)));end return v6(v53);end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v54=1751 -(1073 + 678) ;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v54~=0) then else v55=164 -(39 + 125) ;v56=nil;v54=523 -(23 + 499) ;end if (4==v54) then while true do if (v55~=3) then else v62=nil;while true do local v86=0 -0 ;while true do if (v86==(1 -0)) then if (v56==3) then local v107=0 -0 ;while true do if (v107==(2 -1)) then return v60;end if (v107==(1583 -(967 + 616))) then for v111=2 -1 ,v27() do v58[v111-(1 + 0) ]=v33();end for v113=1,v27() do v59[v113]=v27();end v107=1;end end end if ((332 -(183 + 148))~=v56) then else local v108=0 + 0 ;while true do if (v108==(1 + 0)) then v62={};v56=7 -5 ;break;end if (v108==(0 -0)) then v60={v57,v58,nil,v59};v61=v27();v108=4 -3 ;end end end break;end if (v86==0) then local v102=0 -0 ;while true do if (v102~=(1 -0)) then else v86=1 + 0 ;break;end if (v102==0) then if (v56==(0 + 0)) then local v109=0;while true do if (1==v109) then v59={};v56=1;break;end if (v109==(0 + 0)) then v57={};v58={};v109=24 -(6 + 17) ;end end end if (v56~=2) then else for v115=1 + 0 ,v61 do local v116=0;local v117;local v118;local v119;while true do if (v116==(0 + 0)) then v117=0 + 0 ;v118=nil;v116=1;end if (v116==1) then v119=nil;while true do if (0==v117) then local v130=0 -0 ;while true do if (v130==0) then v118=v25();v119=nil;v130=1 + 0 ;end if (v130==1) then v117=1;break;end end end if (v117==(3 -2)) then if (v118==1) then v119=v25()~=(0 -0) ;elseif (v118==(1 + 1)) then v119=v28();elseif (v118~=(3 + 0)) then else v119=v29();end v62[v115]=v119;break;end end break;end end end v60[3 + 0 ]=v25();for v120=1 + 0 ,v27() do local v121=0 -0 ;local v122;while true do if (v121~=(0 + 0)) then else v122=v25();if (v21(v122,1 + 0 ,1 + 0 )~=(0 -0)) then else local v125=218 -(96 + 122) ;local v126;local v127;local v128;local v129;while true do if (v125~=(1707 -(1372 + 334))) then else local v132=277 -(248 + 29) ;while true do if (v132==0) then v128=nil;v129=nil;v132=1;end if (v132==1) then v125=2 -0 ;break;end end end if (v125==(1520 -(1238 + 282))) then v126=0;v127=nil;v125=1;end if (v125==2) then while true do if (v126==(6 -3)) then if (v21(v128,1429 -(75 + 1351) ,3)~=(1 + 0)) then else v129[4]=v62[v129[4 + 0 ]];end v57[v120]=v129;break;end if (v126~=1) then else local v158=0;local v159;while true do if (v158==0) then v159=0;while true do if (0~=v159) then else local v198=0 + 0 ;while true do if (v198~=1) then else v159=1;break;end if (v198~=0) then else v129={v26(),v26(),nil,nil};if (v127==(1656 -(1339 + 317))) then local v227=0 + 0 ;local v228;while true do if (v227~=0) then else v228=1388 -(6 + 1382) ;while true do if (v228==(1790 -(241 + 1549))) then v129[1459 -(631 + 825) ]=v26();v129[7 -3 ]=v26();break;end end break;end end elseif (v127==(1997 -(488 + 1508))) then v129[3]=v27();elseif (v127==2) then v129[3 + 0 ]=v27() -(2^(45 -29)) ;elseif (v127~=(14 -11)) then else local v248=0;local v249;while true do if (v248==0) then v249=0;while true do if (v249~=0) then else v129[974 -(21 + 950) ]=v27() -((2 + 0)^(3 + 13)) ;v129[8 -4 ]=v26();break;end end break;end end end v198=148 -(145 + 2) ;end end end if (v159~=(1647 -(1478 + 168))) then else v126=2;break;end end break;end end end if (2==v126) then local v160=0;while true do if (0==v160) then if (v21(v128,1 + 0 ,4 -3 )==(741 -(682 + 58))) then v129[2 + 0 ]=v62[v129[2]];end if (v21(v128,1201 -(995 + 204) ,2)==(1 + 0)) then v129[1 + 2 ]=v62[v129[3]];end v160=1;end if ((102 -(11 + 90))~=v160) then else v126=3;break;end end end if (v126~=(0 -0)) then else local v161=0 -0 ;local v162;while true do if (v161==(29 -(14 + 15))) then v162=1920 -(1196 + 724) ;while true do if (v162==(1 + 0)) then v126=1;break;end if (v162==0) then v127=v21(v122,4 -2 ,7 -4 );v128=v21(v122,2 + 2 ,9 -3 );v162=1;end end break;end end end end break;end end end break;end end end v56=9 -6 ;end v102=1186 -(210 + 975) ;end end end end end break;end if (v55~=2) then else v60=nil;v61=nil;v55=1 + 2 ;end if (v55==(1797 -(253 + 1544))) then local v84=0 -0 ;while true do if (v84==1) then v55=1;break;end if (v84==0) then v56=1765 -(644 + 1121) ;v57=nil;v84=1;end end end if (v55==(3 -2)) then v58=nil;v59=nil;v55=1210 -(550 + 658) ;end end break;end if ((4 -2)==v54) then v59=nil;v60=nil;v54=2 + 1 ;end if ((1372 -(346 + 1025))==v54) then v57=nil;v58=nil;v54=1456 -(1040 + 414) ;end if ((3 + 0)~=v54) then else v61=nil;v62=nil;v54=4;end end end local function v34(v35,v36,v37)local v63=0;local v64;local v65;local v66;while true do if (v63==1) then v66=v35[3];return function(...)local v78=0;local v79;local v80;local v81;local v82;local v83;while true do if (v78==1) then v81={...};v82=v12("#",...) -1 ;v78=2;end if (v78==0) then v79=1;v80= -1;v78=1;end if (3==v78) then A,B=v32(v11(v83));if  not A[1] then local v97=v35[4][v79] or "?" ;error("Script error at ["   .. v97   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v78==2) then v83=nil;v83=function()local v87=v64;local v88=v65;local v89=v66;local v90=v32;local v91={};local v92={};local v93={};for v98=0 + 0 ,v82 do if ((((3449 + 2000) -((3297 -(111 + 1639)) + 404))<=4728) and (v98>=v89)) then v91[v98-v89 ]=v81[v98 + 1 ];else v93[v98]=v81[v98 + ((2 + 0) -1) ];end end local v94=(v82-v89) + (1 -(0 + 0)) ;local v95;local v96;while true do local v99=0;local v100;local v101;while true do if ((v99==(1 -0)) or ((6161 -(1604 + (532 -(124 + 256))))<(3804 -(364 + 143)))) then while true do if ((1023==(312 + 249 + 462)) and (v100==(0 -0))) then v101=(1734 -(907 + 827)) -0 ;while true do if ((v101==(1712 -((1891 -(150 + 55)) + 26))) or ((584 -206)>=(4024 -2576))) then local v123=907 -(269 + 455 + 183) ;local v124;while true do if (((299 + 84)<(1740 -(110 + 453))) and (v123==(0 + 0))) then v124=0 + 0 + 0 ;while true do if ((v124==(0 + 0)) or (((352 + 157) -((443 -(54 + 36)) + 126))>(283 + 3479))) then local v133=0 -(0 + 0) ;while true do if ((1932>=(4664 -2917)) and (v133==(1 + 0))) then v124=1 -0 ;break;end if (((142 + 41)<(2272 + 627)) and (v133==(0 + 0))) then v95=v87[v79];v96=v95[1025 -(718 + 306) ];v133=1 + 0 ;end end end if (((855 + 2083)>=(8013 -5889)) and (v124==(1091 -(599 + 221 + 270)))) then v101=553 -(287 + 265) ;break;end end break;end end end if (((9595 -6144)<(4221 -(154 + 437))) and (v101==(1 + 0))) then if ((v96<=(12 -3)) or ((1994 + 2137)<(3920 -(6442 -4451)))) then if (((5271 -2514)>(2655 -(71 + 201))) and (v96<=((1186 -(175 + 1008)) + 1))) then if ((v96<=(1 + 0)) or ((572 -373)>(2970 + 1418))) then if (((2471 + 259)<=(1305 + 3130)) and (v96==(0 -0))) then v93[v95[1 + 1 ]][v95[5 -2 ]]=v93[v95[4]];elseif ((v95[245 -(52 + 191) ]==v93[v95[1697 -(1047 + 646) ]]) or (((2158 -(251 + 1406)) -(106 + 15))>=(1597 -1018))) then v79=v79 + 1 ;else v79=v95[2 + 1 ];end elseif ((1938>=(785 -(167 + 391))) and (v96<=(1940 -(443 + 1495)))) then local v136=0 -0 ;local v137;local v138;local v139;local v140;while true do if ((v136==(1 -0)) or ((8495 -6499)>=4087)) then v139=nil;v140=nil;v136=2 + 0 ;end if (((1387 + 3142)>(1993 -(456 + 909 + 364))) and (v136==(1 + 1))) then while true do if ((v137==(2 + 0)) or (1351>=(4287 -(27 + 86)))) then for v199=1469 -(535 + 933) ,v95[4] do local v200=1638 -(180 + 1458) ;local v201;local v202;while true do if ((v200==((198 + 147) -(150 + 195))) or (1784<=(3278 -(682 + 653 + 397)))) then v201=600 -(207 + 393) ;v202=nil;v200=1337 -(1287 + 49) ;end if (((1963 -(526 + 1253))<=(142 + 111 + 110)) and (1==v200)) then while true do if ((v201==(188 -(14 + 174))) or ((1641 + 2966)<=(1060 -(133 + 316)))) then local v229=0 + 0 ;while true do if (((2940 -1766)>=(2067 -(749 + 534))) and (v229==(0 + 0))) then v79=v79 + (2 -1) ;v202=v87[v79];v229=1 -0 ;end if ((v229==(1 -0)) or (((1275 -254) -428)<(466 -295))) then v201=1;break;end end end if ((3524<=(6786 -(176 + 1653))) and (v201==(1826 -(708 + 1117)))) then if ((v202[2 -1 ]==(35 -(9 + 18))) or ((6498 -(822 + 958))<(832 + 947))) then v140[v199-1 ]={v93,v202[3]};else v140[v199-(1751 -(465 + 1285)) ]={v36,v202[(346 -(68 + 275)) + 0 ]};end v92[ #v92 + (3 -(1 + 1)) ]=v140;break;end end break;end end end v93[v95[1058 -(807 + 249) ]]=v34(v138,v139,v37);break;end if ((1770<(4257 -(217 + (299 -(40 + 1))))) and (v137==1)) then local v193=0 -0 ;while true do if ((v193==((75 + 355) -(286 + 143))) or (1472>=(1661 + 1469))) then v137=(376 -(77 + 290)) -7 ;break;end if ((v193==(1691 -(752 + 939))) or (((5571 -(862 + 399)) -1621)<=1261)) then v140={};v139=v10({},{__index=function(v206,v207)local v211=0 + 0 ;local v212;local v213;while true do if ((526==526) and (v211==(1644 -(1449 + 194)))) then while true do if (((5699 -(557 + 227))==4915) and (v212==(27 -(14 + 13)))) then local v241=1428 -((2177 -865) + 116) ;local v242;while true do if ((4672>(3880 -2127)) and (v241==0)) then v242=0 -(1754 -(477 + 1277)) ;while true do if (((327 -(79 + 248))==v242) or ((1908 -(8 + 76))>(4100 -(326 + 761 + 279)))) then local v252=148 -(65 + 83) ;while true do if ((3738>=(141 + 355)) and (v252==(0 + 0))) then v213=v140[v207];return v213[453 -(373 + 79) ][v213[1536 -(200 + 1334) ]];end end end end break;end end end end break;end if ((v211==(722 -(259 + 351 + 112))) or ((2197 -(20 + 186))>=(544 + 3936))) then v212=0 + 0 ;v213=nil;v211=1;end end end,__newindex=function(v206,v207,v208)local v214=0 + 0 ;local v215;while true do if ((1738==(2992 -(234 + 1020))) and (v214==(0 -(0 + 0)))) then v215=v140[v207];v215[1][v215[2 + 0 ]]=v208;break;end end end});v193=1156 -((2548 -(1756 + 162)) + 525) ;end end end if ((v137==(0 -0)) or ((1307 -(1141 + 72))>4437)) then local v194=0 + 0 ;while true do if (((7744 -4576)==(621 + 2547)) and (v194==(1 + 0))) then v137=1 + 0 ;break;end if ((v194==(0 + 0)) or ((2538 -(477 + 461 + 121))<((64 + 1369) -356))) then v138=v88[v95[2 + 1 + 0 ]];v139=nil;v194=2 -1 ;end end end end break;end if ((((0 + 0) -0)==v136) or ((1411 + 240)<=(225 + 546))) then v137=0 -0 ;v138=nil;v136=1 -0 ;end end elseif (((8539 -5813)<=(14779 -10332)) and (v96>3)) then v93[v95[93 -(23 + 68) ]]=v36[v95[1 + 2 ]];else v93[v95[4 -2 ]]=v37[v95[492 -(448 + 41) ]];end elseif ((v96<=(1403 -(1248 + (214 -65)))) or (((24886 -14430) -6558)<=(977 -712))) then if (((87 + 917)<4028) and (v96>(302 -(131 + 166)))) then v93[v95[2 + 0 ]][v95[7 -4 ]]=v95[(25 -13) -8 ];else local v143=(244 + 74) -((1545 -(228 + 1009)) + 3 + 7) ;local v144;local v145;local v146;while true do if (((12862 -9354)==((12798 -(529 + 1093)) -7668)) and (v143==(1753 -(891 + 861)))) then v146=nil;while true do if (((4 -3)==v144) or ((3325 -(422 + 342))<=(485 -331))) then for v203=1 + 0 , #v92 do local v204=0;local v205;while true do if ((405==(292 + 113)) and (v204==(0 -0))) then v205=v92[v203];for v217=(0 + 0) -0 , #v205 do local v218=1787 -(1452 + 335) ;local v219;local v220;local v221;while true do if (((6368 -1979)==(5672 -(699 + 584))) and ((634 -(339 + 294))==v218)) then v221=v219[4 -2 ];if ((2901>=(2561 -(1297 + 167))) and (v220==v93) and (v221>=v145)) then local v243=0;local v244;while true do if ((v243==(1197 -(929 + 268))) or ((2920 + 1154)==(5210 -(586 + 888)))) then v244=0 -0 ;while true do if ((((15237 -10480) + 238)==(14685 -9690)) and (v244==0)) then v146[v221]=v220[v221];v219[2 -1 ]=v146;break;end end break;end end end break;end if ((v218==(1358 -(303 + 1055))) or ((5166 -(51 + 769))>=4863)) then v219=v205[v217];v220=v219[2 -1 ];v218=15 -(7 + 7) ;end end end break;end end end break;end if ((v144==(517 -(102 + 415))) or ((396 + 826)<=(439 -283))) then local v195=0;while true do if (((66 + 3570)>=1966) and (v195==(0 -0))) then v145=v95[424 -(149 + 273) ];v146={};v195=(3 -2) -0 ;end if (((1222 + 340)==(4640 -3078)) and (v195==(2 -1))) then v144=1703 -(573 + 1129) ;break;end end end end break;end if ((v143==(0 + 0)) or ((979 + 2278)==(5125 -3763))) then v144=1437 -(661 + 776) ;v145=nil;v143=1 + 0 ;end end end elseif ((v96<=(5 + 2)) or ((8275 -5779)<(7451 -5262))) then v93[v95[582 -(475 + 105) ]]=v34(v88[v95[(3 + 5) -5 ]],nil,v37);elseif (((936 + 3998)>=(6689 -3924)) and (v96>(730 -(577 + 145)))) then if ((1529<(2074 + (2247 -(1724 + 249)))) and (v93[v95[1300 -(682 + 616) ]]==v95[157 -(119 + 34) ])) then v79=v79 + (357 -(224 + 132)) + 0 ;else v79=v95[14 -11 ];end else v93[v95[4 -2 ]]=v93[v95[4 -(3 -2) ]];end elseif ((v96<=(7 + 7)) or ((1154 -((251 -166) + 650))>3650)) then if ((v96<=11) or ((1034 -471)>=2413)) then if ((v96>(3 + 7)) or ((3416 -(1574 + 239))>(7460 -2648))) then v93[v95[2]]=v95[1 + 2 ];else do return;end end elseif (((2083 -(129 + 1494 + 358))<3382) and (v96<=(6 + 6))) then for v165=v95[7 -5 ],v95[1 + 2 ] do v93[v165]=nil;end elseif ((4572>=(1454 -946)) and (v96>13)) then v79=v95[989 -(297 + 689) ];else v93[v95[5 -3 ]]();end elseif (((2433 + 536)>(308 + 174 + 196)) and (v96<=(1221 -(202 + 1003)))) then if ((((5928 -(1447 + 150)) -1198)<=((8649 -6681) + 2416)) and (v96>(1258 -(769 + 474)))) then local v150=0 + 0 + 0 ;local v151;local v152;while true do if ((v150==(1796 -((1343 -519) + 971))) or ((5134 -(1485 + 92))==981)) then while true do if ((((14179 -8519) -(785 + 1007))>((1735 + 3114) -2715)) and (v151==(0 -0))) then v152=v95[(409 -(165 + 243)) + 1 ];v93[v152]=v93[v152](v93[v152 + ((807 -198) -(482 + 126)) ]);break;end end break;end if ((v150==(867 -(714 + 153))) or ((2706 -(81 + 289))==(3209 -(1468 + 410)))) then v151=1475 -(767 + 708) ;v152=nil;v150=(1253 -(441 + 810)) -(3 -2) ;end end else local v153=30 -(5 + 25) ;local v154;while true do if ((v153==(696 -(539 + 157))) or ((1518 + 2086)==(4446 -(364 + 1158)))) then v154=v95[(15 -8) -5 ];v93[v154](v13(v93,v154 + 1 ,v95[10 -7 ]));break;end end end elseif ((v96<=17) or ((4862 -(50 + 41))<(57 + 107))) then v93[v95[3 -1 ]]=v93[v95[2 + 1 ]][v95[2 + 2 ]];elseif ((1860<(3047 -(890 + 236))) and (v96==(2 + 16))) then local v175=0 + 0 ;local v176;local v177;local v178;local v179;while true do if ((v175==(7 -5)) or ((6130 -(1248 + 443))<(2675 -(669 + 610 + 472)))) then while true do if (((2753 -((1977 -(1028 + 6)) + 891))>(393 + 52)) and ((0 -0)==v176)) then v177=1575 -(1036 + 539) ;v178=nil;v176=(731 -256) -(136 + 288 + 50) ;end if ((1==v176) or ((5824 -(444 + 530))<(8770 -4629))) then v179=nil;while true do if (((804 + 3831)>=4604) and (v177==(2 -1))) then v93[v178 + 1 ]=v179;v93[v178]=v179[v95[1257 -(924 + 329) ]];break;end if (((5324 -(632 + 9))==(817 + 3075 + 791)) and (v177==(0 -0))) then local v225=606 -(577 + 29) ;local v226;while true do if ((v225==(0 + 0 + 0)) or (((3980 -1686) -1042)==(5209 -(471 + 290)))) then v226=384 -(69 + 315) ;while true do if (((3941 -1845)==(1246 + 850)) and (v226==1)) then v177=1 -0 ;break;end if ((v226==(0 + 0)) or ((227 -123)>=(4370 -(899 + 1094)))) then local v245=0 -0 ;while true do if ((v245==(3 -2)) or (3917==(2124 -(223 + 266)))) then v226=637 -(48 + 588) ;break;end if (((3163 + 171)<=((2226 + 2619) -(265 + 116))) and ((0 + 0)==v245)) then v178=v95[8 -6 ];v179=v93[v95[12 -9 ]];v245=1 + 0 ;end end end end break;end end end end break;end end break;end if ((v175==(1130 -(546 + 583))) or (3895<=(1003 -((1985 -(1199 + 377)) + 327)))) then v178=nil;v179=nil;v175=2;end if (((2332 -(34 + 1917))<(9421 -6016)) and (v175==(0 + 0))) then v176=0 -(0 + 0) ;v177=nil;v175=1191 -(537 + 653) ;end end else local v180=1316 -(1264 + 52) ;local v181;while true do if ((v180==0) or (3616==(266 + 1207))) then v181=v95[1683 -(1095 + 586) ];v93[v181]=v93[v181](v13(v93,v181 + 1 + 0 ,v95[10 -7 ]));break;end end end v79=v79 + 1 ;break;end end break;end end break;end if (((10435 -(6831 -(352 + 862)))==(6427 -(96 + 1513))) and (v99==((1362 + 291) -(1615 + 38)))) then v100=0 -0 ;v101=nil;v99=996 -((733 -(239 + 326)) + 827) ;end end end end;v78=3;end end end;end if (v63==0) then v64=v35[1];v65=v35[2];v63=1;end end end return v34(v33(),{},v17)(...);end vv9(),...);end